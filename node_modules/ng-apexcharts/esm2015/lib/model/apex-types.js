/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// export declare class ApexCharts {
//   constructor(el: any, options: ApexOptions);
//   static exec(chartID: string, fn: () => void, options: any): any;
//   static initOnLoad(): void;
//   render(): Promise<void>;
//   updateOptions(options: any, redrawPaths: boolean, animate: boolean, updateSyncedCharts: boolean): Promise<void>;
//   updateSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate: boolean): void;
//   toggleSeries(seriesName: string): void;
//   destroy(): void;
//   addXaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
//   addYaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
//   addPointAnnotation(options: any, pushToMemory?: boolean, context?: any): void;
//   addText(options: any, pushToMemory?: boolean, context?: any): void;
//   dataURI(): void;
// }
/**
 * @record
 */
export function ApexOptions() { }
if (false) {
    /** @type {?|undefined} */
    ApexOptions.prototype.annotations;
    /** @type {?|undefined} */
    ApexOptions.prototype.chart;
    /** @type {?|undefined} */
    ApexOptions.prototype.colors;
    /** @type {?|undefined} */
    ApexOptions.prototype.dataLabels;
    /** @type {?|undefined} */
    ApexOptions.prototype.series;
    /** @type {?|undefined} */
    ApexOptions.prototype.stroke;
    /** @type {?|undefined} */
    ApexOptions.prototype.labels;
    /** @type {?|undefined} */
    ApexOptions.prototype.legend;
    /** @type {?|undefined} */
    ApexOptions.prototype.fill;
    /** @type {?|undefined} */
    ApexOptions.prototype.tooltip;
    /** @type {?|undefined} */
    ApexOptions.prototype.plotOptions;
    /** @type {?|undefined} */
    ApexOptions.prototype.responsive;
    /** @type {?|undefined} */
    ApexOptions.prototype.markers;
    /** @type {?|undefined} */
    ApexOptions.prototype.noData;
    /** @type {?|undefined} */
    ApexOptions.prototype.xaxis;
    /** @type {?|undefined} */
    ApexOptions.prototype.yaxis;
    /** @type {?|undefined} */
    ApexOptions.prototype.grid;
    /** @type {?|undefined} */
    ApexOptions.prototype.states;
    /** @type {?|undefined} */
    ApexOptions.prototype.title;
    /** @type {?|undefined} */
    ApexOptions.prototype.subtitle;
    /** @type {?|undefined} */
    ApexOptions.prototype.theme;
}
/**
 * Main Chart options
 * See https://apexcharts.com/docs/options/chart/
 * @record
 */
export function ApexChart() { }
if (false) {
    /** @type {?|undefined} */
    ApexChart.prototype.width;
    /** @type {?|undefined} */
    ApexChart.prototype.height;
    /** @type {?} */
    ApexChart.prototype.type;
    /** @type {?|undefined} */
    ApexChart.prototype.foreColor;
    /** @type {?|undefined} */
    ApexChart.prototype.fontFamily;
    /** @type {?|undefined} */
    ApexChart.prototype.background;
    /** @type {?|undefined} */
    ApexChart.prototype.offsetX;
    /** @type {?|undefined} */
    ApexChart.prototype.offsetY;
    /** @type {?|undefined} */
    ApexChart.prototype.dropShadow;
    /** @type {?|undefined} */
    ApexChart.prototype.events;
    /** @type {?|undefined} */
    ApexChart.prototype.brush;
    /** @type {?|undefined} */
    ApexChart.prototype.id;
    /** @type {?|undefined} */
    ApexChart.prototype.locales;
    /** @type {?|undefined} */
    ApexChart.prototype.defaultLocale;
    /** @type {?|undefined} */
    ApexChart.prototype.parentHeightOffset;
    /** @type {?|undefined} */
    ApexChart.prototype.sparkline;
    /** @type {?|undefined} */
    ApexChart.prototype.stacked;
    /** @type {?|undefined} */
    ApexChart.prototype.stackType;
    /** @type {?|undefined} */
    ApexChart.prototype.toolbar;
    /** @type {?|undefined} */
    ApexChart.prototype.zoom;
    /** @type {?|undefined} */
    ApexChart.prototype.selection;
    /** @type {?|undefined} */
    ApexChart.prototype.animations;
}
/**
 * @record
 */
export function ApexStates() { }
if (false) {
    /** @type {?|undefined} */
    ApexStates.prototype.normal;
    /** @type {?|undefined} */
    ApexStates.prototype.hover;
    /** @type {?|undefined} */
    ApexStates.prototype.active;
}
/**
 * Chart Title options
 * See https://apexcharts.com/docs/options/title/
 * @record
 */
export function ApexTitleSubtitle() { }
if (false) {
    /** @type {?|undefined} */
    ApexTitleSubtitle.prototype.text;
    /** @type {?|undefined} */
    ApexTitleSubtitle.prototype.align;
    /** @type {?|undefined} */
    ApexTitleSubtitle.prototype.margin;
    /** @type {?|undefined} */
    ApexTitleSubtitle.prototype.offsetX;
    /** @type {?|undefined} */
    ApexTitleSubtitle.prototype.offsetY;
    /** @type {?|undefined} */
    ApexTitleSubtitle.prototype.floating;
    /** @type {?|undefined} */
    ApexTitleSubtitle.prototype.style;
}
/**
 * Options for the line drawn on line and area charts.
 * See https://apexcharts.com/docs/options/stroke/
 * @record
 */
export function ApexStroke() { }
if (false) {
    /** @type {?|undefined} */
    ApexStroke.prototype.show;
    /** @type {?|undefined} */
    ApexStroke.prototype.curve;
    /** @type {?|undefined} */
    ApexStroke.prototype.lineCap;
    /** @type {?|undefined} */
    ApexStroke.prototype.colors;
    /** @type {?|undefined} */
    ApexStroke.prototype.width;
    /** @type {?|undefined} */
    ApexStroke.prototype.dashArray;
}
/**
 * @record
 */
export function ApexAnnotations() { }
if (false) {
    /** @type {?|undefined} */
    ApexAnnotations.prototype.position;
    /** @type {?|undefined} */
    ApexAnnotations.prototype.yaxis;
    /** @type {?|undefined} */
    ApexAnnotations.prototype.xaxis;
    /** @type {?|undefined} */
    ApexAnnotations.prototype.points;
}
/**
 * @record
 */
export function AnnotationLabel() { }
if (false) {
    /** @type {?|undefined} */
    AnnotationLabel.prototype.borderColor;
    /** @type {?|undefined} */
    AnnotationLabel.prototype.borderWidth;
    /** @type {?|undefined} */
    AnnotationLabel.prototype.text;
    /** @type {?|undefined} */
    AnnotationLabel.prototype.textAnchor;
    /** @type {?|undefined} */
    AnnotationLabel.prototype.offsetX;
    /** @type {?|undefined} */
    AnnotationLabel.prototype.offsetY;
    /** @type {?|undefined} */
    AnnotationLabel.prototype.style;
    /** @type {?|undefined} */
    AnnotationLabel.prototype.position;
    /** @type {?|undefined} */
    AnnotationLabel.prototype.orientation;
}
/**
 * @record
 */
export function AnnotationStyle() { }
if (false) {
    /** @type {?|undefined} */
    AnnotationStyle.prototype.background;
    /** @type {?|undefined} */
    AnnotationStyle.prototype.color;
    /** @type {?|undefined} */
    AnnotationStyle.prototype.fontSize;
    /** @type {?|undefined} */
    AnnotationStyle.prototype.fontFamily;
    /** @type {?|undefined} */
    AnnotationStyle.prototype.cssClass;
    /** @type {?|undefined} */
    AnnotationStyle.prototype.padding;
}
/**
 * @record
 */
export function XAxisAnnotations() { }
if (false) {
    /** @type {?|undefined} */
    XAxisAnnotations.prototype.x;
    /** @type {?|undefined} */
    XAxisAnnotations.prototype.x2;
    /** @type {?|undefined} */
    XAxisAnnotations.prototype.strokeDashArray;
    /** @type {?|undefined} */
    XAxisAnnotations.prototype.fillColor;
    /** @type {?|undefined} */
    XAxisAnnotations.prototype.borderColor;
    /** @type {?|undefined} */
    XAxisAnnotations.prototype.opacity;
    /** @type {?|undefined} */
    XAxisAnnotations.prototype.offsetX;
    /** @type {?|undefined} */
    XAxisAnnotations.prototype.offsetY;
    /** @type {?|undefined} */
    XAxisAnnotations.prototype.label;
}
/**
 * @record
 */
export function YAxisAnnotations() { }
if (false) {
    /** @type {?|undefined} */
    YAxisAnnotations.prototype.y;
    /** @type {?|undefined} */
    YAxisAnnotations.prototype.y2;
    /** @type {?|undefined} */
    YAxisAnnotations.prototype.strokeDashArray;
    /** @type {?|undefined} */
    YAxisAnnotations.prototype.fillColor;
    /** @type {?|undefined} */
    YAxisAnnotations.prototype.borderColor;
    /** @type {?|undefined} */
    YAxisAnnotations.prototype.opacity;
    /** @type {?|undefined} */
    YAxisAnnotations.prototype.offsetX;
    /** @type {?|undefined} */
    YAxisAnnotations.prototype.offsetY;
    /** @type {?|undefined} */
    YAxisAnnotations.prototype.yAxisIndex;
    /** @type {?|undefined} */
    YAxisAnnotations.prototype.label;
}
/**
 * @record
 */
export function PointAnnotations() { }
if (false) {
    /** @type {?|undefined} */
    PointAnnotations.prototype.x;
    /** @type {?|undefined} */
    PointAnnotations.prototype.y;
    /** @type {?|undefined} */
    PointAnnotations.prototype.yAxisIndex;
    /** @type {?|undefined} */
    PointAnnotations.prototype.seriesIndex;
    /** @type {?|undefined} */
    PointAnnotations.prototype.marker;
    /** @type {?|undefined} */
    PointAnnotations.prototype.label;
}
/**
 * Options for localization.
 * See https://apexcharts.com/docs/options/chart/locales
 * @record
 */
export function ApexLocale() { }
if (false) {
    /** @type {?|undefined} */
    ApexLocale.prototype.name;
    /** @type {?|undefined} */
    ApexLocale.prototype.options;
}
/**
 * PlotOptions for specifying chart-type-specific configuration.
 * See https://apexcharts.com/docs/options/plotoptions/bar/
 * @record
 */
export function ApexPlotOptions() { }
if (false) {
    /** @type {?|undefined} */
    ApexPlotOptions.prototype.bar;
    /** @type {?|undefined} */
    ApexPlotOptions.prototype.bubble;
    /** @type {?|undefined} */
    ApexPlotOptions.prototype.candlestick;
    /** @type {?|undefined} */
    ApexPlotOptions.prototype.heatmap;
    /** @type {?|undefined} */
    ApexPlotOptions.prototype.pie;
    /** @type {?|undefined} */
    ApexPlotOptions.prototype.radar;
    /** @type {?|undefined} */
    ApexPlotOptions.prototype.radialBar;
}
/**
 * @record
 */
export function ApexFill() { }
if (false) {
    /** @type {?|undefined} */
    ApexFill.prototype.colors;
    /** @type {?|undefined} */
    ApexFill.prototype.opacity;
    /** @type {?|undefined} */
    ApexFill.prototype.type;
    /** @type {?|undefined} */
    ApexFill.prototype.gradient;
    /** @type {?|undefined} */
    ApexFill.prototype.image;
    /** @type {?|undefined} */
    ApexFill.prototype.pattern;
}
/**
 * Chart Legend configuration options.
 * See https://apexcharts.com/docs/options/legend/
 * @record
 */
export function ApexLegend() { }
if (false) {
    /** @type {?|undefined} */
    ApexLegend.prototype.show;
    /** @type {?|undefined} */
    ApexLegend.prototype.showForSingleSeries;
    /** @type {?|undefined} */
    ApexLegend.prototype.showForNullSeries;
    /** @type {?|undefined} */
    ApexLegend.prototype.showForZeroSeries;
    /** @type {?|undefined} */
    ApexLegend.prototype.floating;
    /** @type {?|undefined} */
    ApexLegend.prototype.inverseOrder;
    /** @type {?|undefined} */
    ApexLegend.prototype.position;
    /** @type {?|undefined} */
    ApexLegend.prototype.horizontalAlign;
    /** @type {?|undefined} */
    ApexLegend.prototype.fontSize;
    /** @type {?|undefined} */
    ApexLegend.prototype.fontFamily;
    /** @type {?|undefined} */
    ApexLegend.prototype.width;
    /** @type {?|undefined} */
    ApexLegend.prototype.height;
    /** @type {?|undefined} */
    ApexLegend.prototype.offsetX;
    /** @type {?|undefined} */
    ApexLegend.prototype.offsetY;
    /** @type {?|undefined} */
    ApexLegend.prototype.textAnchor;
    /** @type {?|undefined} */
    ApexLegend.prototype.labels;
    /** @type {?|undefined} */
    ApexLegend.prototype.markers;
    /** @type {?|undefined} */
    ApexLegend.prototype.itemMargin;
    /** @type {?|undefined} */
    ApexLegend.prototype.containerMargin;
    /** @type {?|undefined} */
    ApexLegend.prototype.onItemClick;
    /** @type {?|undefined} */
    ApexLegend.prototype.onItemHover;
    /**
     * @param {?} legendName
     * @param {?=} opts
     * @return {?}
     */
    ApexLegend.prototype.formatter = function (legendName, opts) { };
    /**
     * @param {?} legendName
     * @param {?=} opts
     * @return {?}
     */
    ApexLegend.prototype.tooltipHoverFormatter = function (legendName, opts) { };
}
/**
 * Chart Datalabels options
 * See https://apexcharts.com/docs/options/datalabels/
 * @record
 */
export function ApexDataLabels() { }
if (false) {
    /** @type {?|undefined} */
    ApexDataLabels.prototype.enabled;
    /** @type {?|undefined} */
    ApexDataLabels.prototype.enabledOnSeries;
    /** @type {?|undefined} */
    ApexDataLabels.prototype.textAnchor;
    /** @type {?|undefined} */
    ApexDataLabels.prototype.offsetX;
    /** @type {?|undefined} */
    ApexDataLabels.prototype.offsetY;
    /** @type {?|undefined} */
    ApexDataLabels.prototype.style;
    /** @type {?|undefined} */
    ApexDataLabels.prototype.dropShadow;
    /**
     * @param {?} val
     * @param {?=} opts
     * @return {?}
     */
    ApexDataLabels.prototype.formatter = function (val, opts) { };
}
/**
 * @record
 */
export function ApexResponsive() { }
if (false) {
    /** @type {?|undefined} */
    ApexResponsive.prototype.breakpoint;
    /** @type {?|undefined} */
    ApexResponsive.prototype.options;
}
/**
 * Chart Tooltip options
 * See https://apexcharts.com/docs/options/tooltip/
 * @record
 */
export function ApexTooltip() { }
if (false) {
    /** @type {?|undefined} */
    ApexTooltip.prototype.enabled;
    /** @type {?|undefined} */
    ApexTooltip.prototype.enabledOnSeries;
    /** @type {?|undefined} */
    ApexTooltip.prototype.shared;
    /** @type {?|undefined} */
    ApexTooltip.prototype.followCursor;
    /** @type {?|undefined} */
    ApexTooltip.prototype.intersect;
    /** @type {?|undefined} */
    ApexTooltip.prototype.inverseOrder;
    /** @type {?|undefined} */
    ApexTooltip.prototype.custom;
    /** @type {?|undefined} */
    ApexTooltip.prototype.fillSeriesColor;
    /** @type {?|undefined} */
    ApexTooltip.prototype.theme;
    /** @type {?|undefined} */
    ApexTooltip.prototype.style;
    /** @type {?|undefined} */
    ApexTooltip.prototype.onDatasetHover;
    /** @type {?|undefined} */
    ApexTooltip.prototype.x;
    /** @type {?|undefined} */
    ApexTooltip.prototype.y;
    /** @type {?|undefined} */
    ApexTooltip.prototype.z;
    /** @type {?|undefined} */
    ApexTooltip.prototype.marker;
    /** @type {?|undefined} */
    ApexTooltip.prototype.items;
    /** @type {?|undefined} */
    ApexTooltip.prototype.fixed;
}
/**
 * X Axis options
 * See https://apexcharts.com/docs/options/xaxis/
 * @record
 */
export function ApexXAxis() { }
if (false) {
    /** @type {?|undefined} */
    ApexXAxis.prototype.type;
    /** @type {?|undefined} */
    ApexXAxis.prototype.categories;
    /** @type {?|undefined} */
    ApexXAxis.prototype.labels;
    /** @type {?|undefined} */
    ApexXAxis.prototype.axisBorder;
    /** @type {?|undefined} */
    ApexXAxis.prototype.axisTicks;
    /** @type {?|undefined} */
    ApexXAxis.prototype.tickAmount;
    /** @type {?|undefined} */
    ApexXAxis.prototype.min;
    /** @type {?|undefined} */
    ApexXAxis.prototype.max;
    /** @type {?|undefined} */
    ApexXAxis.prototype.range;
    /** @type {?|undefined} */
    ApexXAxis.prototype.floating;
    /** @type {?|undefined} */
    ApexXAxis.prototype.position;
    /** @type {?|undefined} */
    ApexXAxis.prototype.title;
    /** @type {?|undefined} */
    ApexXAxis.prototype.crosshairs;
    /** @type {?|undefined} */
    ApexXAxis.prototype.tooltip;
}
/**
 * Y Axis options
 * See https://apexcharts.com/docs/options/yaxis/
 * @record
 */
export function ApexYAxis() { }
if (false) {
    /** @type {?|undefined} */
    ApexYAxis.prototype.show;
    /** @type {?|undefined} */
    ApexYAxis.prototype.showAlways;
    /** @type {?|undefined} */
    ApexYAxis.prototype.seriesName;
    /** @type {?|undefined} */
    ApexYAxis.prototype.opposite;
    /** @type {?|undefined} */
    ApexYAxis.prototype.logarithmic;
    /** @type {?|undefined} */
    ApexYAxis.prototype.tickAmount;
    /** @type {?|undefined} */
    ApexYAxis.prototype.forceNiceScale;
    /** @type {?|undefined} */
    ApexYAxis.prototype.min;
    /** @type {?|undefined} */
    ApexYAxis.prototype.max;
    /** @type {?|undefined} */
    ApexYAxis.prototype.floating;
    /** @type {?|undefined} */
    ApexYAxis.prototype.decimalsInFloat;
    /** @type {?|undefined} */
    ApexYAxis.prototype.labels;
    /** @type {?|undefined} */
    ApexYAxis.prototype.axisBorder;
    /** @type {?|undefined} */
    ApexYAxis.prototype.axisTicks;
    /** @type {?|undefined} */
    ApexYAxis.prototype.title;
    /** @type {?|undefined} */
    ApexYAxis.prototype.crosshairs;
    /** @type {?|undefined} */
    ApexYAxis.prototype.tooltip;
}
/**
 * Plot X and Y grid options
 * See https://apexcharts.com/docs/options/grid/
 * @record
 */
export function ApexGrid() { }
if (false) {
    /** @type {?|undefined} */
    ApexGrid.prototype.show;
    /** @type {?|undefined} */
    ApexGrid.prototype.borderColor;
    /** @type {?|undefined} */
    ApexGrid.prototype.strokeDashArray;
    /** @type {?|undefined} */
    ApexGrid.prototype.position;
    /** @type {?|undefined} */
    ApexGrid.prototype.xaxis;
    /** @type {?|undefined} */
    ApexGrid.prototype.yaxis;
    /** @type {?|undefined} */
    ApexGrid.prototype.row;
    /** @type {?|undefined} */
    ApexGrid.prototype.column;
    /** @type {?|undefined} */
    ApexGrid.prototype.padding;
}
/**
 * @record
 */
export function ApexTheme() { }
if (false) {
    /** @type {?|undefined} */
    ApexTheme.prototype.mode;
    /** @type {?|undefined} */
    ApexTheme.prototype.palette;
    /** @type {?|undefined} */
    ApexTheme.prototype.monochrome;
}
/**
 * @record
 */
function ApexDiscretePoint() { }
if (false) {
    /** @type {?|undefined} */
    ApexDiscretePoint.prototype.seriesIndex;
    /** @type {?|undefined} */
    ApexDiscretePoint.prototype.dataPointIndex;
    /** @type {?|undefined} */
    ApexDiscretePoint.prototype.fillColor;
    /** @type {?|undefined} */
    ApexDiscretePoint.prototype.strokeColor;
    /** @type {?|undefined} */
    ApexDiscretePoint.prototype.size;
}
/**
 * @record
 */
export function ApexMarkers() { }
if (false) {
    /** @type {?|undefined} */
    ApexMarkers.prototype.size;
    /** @type {?|undefined} */
    ApexMarkers.prototype.colors;
    /** @type {?|undefined} */
    ApexMarkers.prototype.strokeColor;
    /** @type {?|undefined} */
    ApexMarkers.prototype.strokeWidth;
    /** @type {?|undefined} */
    ApexMarkers.prototype.strokeOpacity;
    /** @type {?|undefined} */
    ApexMarkers.prototype.fillOpacity;
    /** @type {?|undefined} */
    ApexMarkers.prototype.discrete;
    /** @type {?|undefined} */
    ApexMarkers.prototype.shape;
    /** @type {?|undefined} */
    ApexMarkers.prototype.radius;
    /** @type {?|undefined} */
    ApexMarkers.prototype.offsetX;
    /** @type {?|undefined} */
    ApexMarkers.prototype.offsetY;
    /** @type {?|undefined} */
    ApexMarkers.prototype.hover;
    /**
     * @param {?=} e
     * @return {?}
     */
    ApexMarkers.prototype.onClick = function (e) { };
    /**
     * @param {?=} e
     * @return {?}
     */
    ApexMarkers.prototype.onDblClick = function (e) { };
}
/**
 * @record
 */
export function ApexNoData() { }
if (false) {
    /** @type {?|undefined} */
    ApexNoData.prototype.text;
    /** @type {?|undefined} */
    ApexNoData.prototype.align;
    /** @type {?|undefined} */
    ApexNoData.prototype.verticalAlign;
    /** @type {?|undefined} */
    ApexNoData.prototype.offsetX;
    /** @type {?|undefined} */
    ApexNoData.prototype.offsetY;
    /** @type {?|undefined} */
    ApexNoData.prototype.style;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBleC10eXBlcy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLWFwZXhjaGFydHMvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvYXBleC10eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JBLGlDQXNCQzs7O0lBckJDLGtDQUE4Qjs7SUFDOUIsNEJBQWtCOztJQUNsQiw2QkFBa0I7O0lBQ2xCLGlDQUE0Qjs7SUFDNUIsNkJBQXNEOztJQUN0RCw2QkFBb0I7O0lBQ3BCLDZCQUFrQjs7SUFDbEIsNkJBQW9COztJQUNwQiwyQkFBZ0I7O0lBQ2hCLDhCQUFzQjs7SUFDdEIsa0NBQThCOztJQUM5QixpQ0FBOEI7O0lBQzlCLDhCQUFzQjs7SUFDdEIsNkJBQW9COztJQUNwQiw0QkFBa0I7O0lBQ2xCLDRCQUFnQzs7SUFDaEMsMkJBQWdCOztJQUNoQiw2QkFBb0I7O0lBQ3BCLDRCQUEwQjs7SUFDMUIsK0JBQTZCOztJQUM3Qiw0QkFBa0I7Ozs7Ozs7QUFPcEIsK0JBK0dDOzs7SUE5R0MsMEJBQXdCOztJQUN4QiwyQkFBeUI7O0lBQ3pCLHlCQUFnQjs7SUFDaEIsOEJBQW1COztJQUNuQiwrQkFBb0I7O0lBQ3BCLCtCQUFvQjs7SUFDcEIsNEJBQWlCOztJQUNqQiw0QkFBaUI7O0lBQ2pCLCtCQU1FOztJQUNGLDJCQWdCRTs7SUFDRiwwQkFJRTs7SUFDRix1QkFBWTs7SUFDWiw0QkFBdUI7O0lBQ3ZCLGtDQUF1Qjs7SUFDdkIsdUNBQTRCOztJQUM1Qiw4QkFFRTs7SUFDRiw0QkFBa0I7O0lBQ2xCLDhCQUE4Qjs7SUFDOUIsNEJBWUU7O0lBQ0YseUJBZUU7O0lBQ0YsOEJBcUJFOztJQUNGLCtCQVlFOzs7OztBQUdKLGdDQW9CQzs7O0lBbkJDLDRCQUtFOztJQUNGLDJCQUtFOztJQUNGLDRCQU1FOzs7Ozs7O0FBT0osdUNBWUM7OztJQVhDLGlDQUFjOztJQUNkLGtDQUFvQzs7SUFDcEMsbUNBQWdCOztJQUNoQixvQ0FBaUI7O0lBQ2pCLG9DQUFpQjs7SUFDakIscUNBQWtCOztJQUNsQixrQ0FJRTs7Ozs7OztBQW1CSixnQ0FPQzs7O0lBTkMsMEJBQWU7O0lBQ2YsMkJBQTJDOztJQUMzQyw2QkFBc0M7O0lBQ3RDLDRCQUFrQjs7SUFDbEIsMkJBQWU7O0lBQ2YsK0JBQThCOzs7OztBQUdoQyxxQ0FLQzs7O0lBSkMsbUNBQWtCOztJQUNsQixnQ0FBMkI7O0lBQzNCLGdDQUEyQjs7SUFDM0IsaUNBQTRCOzs7OztBQUU5QixxQ0FVQzs7O0lBVEMsc0NBQXFCOztJQUNyQixzQ0FBcUI7O0lBQ3JCLCtCQUFjOztJQUNkLHFDQUFvQjs7SUFDcEIsa0NBQWlCOztJQUNqQixrQ0FBaUI7O0lBQ2pCLGdDQUF3Qjs7SUFDeEIsbUNBQWtCOztJQUNsQixzQ0FBcUI7Ozs7O0FBRXZCLHFDQVlDOzs7SUFYQyxxQ0FBb0I7O0lBQ3BCLGdDQUFlOztJQUNmLG1DQUFrQjs7SUFDbEIscUNBQW9COztJQUNwQixtQ0FBa0I7O0lBQ2xCLGtDQUtFOzs7OztBQUVKLHNDQVVDOzs7SUFUQyw2QkFBb0I7O0lBQ3BCLDhCQUFtQjs7SUFDbkIsMkNBQXlCOztJQUN6QixxQ0FBbUI7O0lBQ25CLHVDQUFxQjs7SUFDckIsbUNBQWlCOztJQUNqQixtQ0FBaUI7O0lBQ2pCLG1DQUFpQjs7SUFDakIsaUNBQXdCOzs7OztBQUUxQixzQ0FXQzs7O0lBVkMsNkJBQWtCOztJQUNsQiw4QkFBbUI7O0lBQ25CLDJDQUF5Qjs7SUFDekIscUNBQW1COztJQUNuQix1Q0FBcUI7O0lBQ3JCLG1DQUFpQjs7SUFDakIsbUNBQWlCOztJQUNqQixtQ0FBaUI7O0lBQ2pCLHNDQUFvQjs7SUFDcEIsaUNBQXdCOzs7OztBQUUxQixzQ0FpQkM7OztJQWhCQyw2QkFBb0I7O0lBQ3BCLDZCQUFrQjs7SUFDbEIsc0NBQW9COztJQUNwQix1Q0FBcUI7O0lBQ3JCLGtDQVVFOztJQUNGLGlDQUF3Qjs7Ozs7OztBQU8xQixnQ0FpQkM7OztJQWhCQywwQkFBYzs7SUFDZCw2QkFjRTs7Ozs7OztBQU9KLHFDQXNLQzs7O0lBcktDLDhCQXFCRTs7SUFDRixpQ0FHRTs7SUFDRixzQ0FRRTs7SUFDRixrQ0FpQkU7O0lBQ0YsOEJBdUNFOztJQUNGLGdDQVdFOztJQUNGLG9DQTJERTs7Ozs7QUFHSiw4QkF5QkM7OztJQXhCQywwQkFBa0I7O0lBQ2xCLDJCQUFpQjs7SUFDakIsd0JBQWM7O0lBQ2QsNEJBU0U7O0lBQ0YseUJBSUU7O0lBQ0YsMkJBS0U7Ozs7Ozs7QUFPSixnQ0FnREM7OztJQS9DQywwQkFBZTs7SUFDZix5Q0FBOEI7O0lBQzlCLHVDQUE0Qjs7SUFDNUIsdUNBQTRCOztJQUM1Qiw4QkFBbUI7O0lBQ25CLGtDQUF1Qjs7SUFDdkIsOEJBQStDOztJQUMvQyxxQ0FBOEM7O0lBQzlDLDhCQUFrQjs7SUFDbEIsZ0NBQW9COztJQUNwQiwyQkFBZTs7SUFDZiw0QkFBZ0I7O0lBQ2hCLDZCQUFpQjs7SUFDakIsNkJBQWlCOztJQUdqQixnQ0FBb0I7O0lBQ3BCLDRCQUdFOztJQUNGLDZCQVdFOztJQUNGLGdDQUdFOztJQUNGLHFDQUdFOztJQUNGLGlDQUVFOztJQUNGLGlDQUVFOzs7Ozs7SUFoQ0YsaUVBQW1EOzs7Ozs7SUFDbkQsNkVBQStEOzs7Ozs7O0FBc0NqRSxvQ0FtQkM7OztJQWxCQyxpQ0FBa0I7O0lBQ2xCLHlDQUFzQzs7SUFDdEMsb0NBQXdDOztJQUN4QyxpQ0FBaUI7O0lBQ2pCLGlDQUFpQjs7SUFDakIsK0JBSUU7O0lBQ0Ysb0NBTUU7Ozs7OztJQUNGLDhEQUE0Qzs7Ozs7QUFHOUMsb0NBR0M7OztJQUZDLG9DQUFvQjs7SUFDcEIsaUNBQWM7Ozs7Ozs7QUFPaEIsaUNBNkNDOzs7SUE1Q0MsOEJBQWtCOztJQUNsQixzQ0FBc0M7O0lBQ3RDLDZCQUFpQjs7SUFDakIsbUNBQXVCOztJQUN2QixnQ0FBb0I7O0lBQ3BCLG1DQUF1Qjs7SUFDdkIsNkJBQTZEOztJQUM3RCxzQ0FBMEI7O0lBQzFCLDRCQUFlOztJQUNmLDRCQUdFOztJQUNGLHFDQUVFOztJQUNGLHdCQUlFOztJQUNGLHdCQUtFOztJQUNGLHdCQUdFOztJQUNGLDZCQUdFOztJQUNGLDRCQUVFOztJQUNGLDRCQUtFOzs7Ozs7O0FBT0osK0JBb0dDOzs7SUFuR0MseUJBQTJDOztJQUMzQywrQkFBaUM7O0lBQ2pDLDJCQTBCRTs7SUFDRiwrQkFNRTs7SUFDRiw4QkFPRTs7SUFDRiwrQkFBbUM7O0lBQ25DLHdCQUFhOztJQUNiLHdCQUFhOztJQUNiLDBCQUFlOztJQUNmLDZCQUFtQjs7SUFDbkIsNkJBQWtCOztJQUNsQiwwQkFVRTs7SUFDRiwrQkE0QkU7O0lBQ0YsNEJBUUU7Ozs7Ozs7QUFPSiwrQkFtRUM7OztJQWxFQyx5QkFBZTs7SUFDZiwrQkFBcUI7O0lBQ3JCLCtCQUFvQjs7SUFDcEIsNkJBQW1COztJQUNuQixnQ0FBc0I7O0lBQ3RCLCtCQUFvQjs7SUFDcEIsbUNBQXlCOztJQUN6Qix3QkFBeUM7O0lBQ3pDLHdCQUF5Qzs7SUFDekMsNkJBQW1COztJQUNuQixvQ0FBeUI7O0lBQ3pCLDJCQWdCRTs7SUFDRiwrQkFLRTs7SUFDRiw4QkFNRTs7SUFDRiwwQkFXRTs7SUFDRiwrQkFRRTs7SUFDRiw0QkFHRTs7Ozs7OztBQU9KLDhCQWlDQzs7O0lBaENDLHdCQUFlOztJQUNmLCtCQUFxQjs7SUFDckIsbUNBQXlCOztJQUN6Qiw0QkFBNEI7O0lBQzVCLHlCQU1FOztJQUNGLHlCQU1FOztJQUNGLHVCQUdFOztJQUNGLDBCQUdFOztJQUNGLDJCQUtFOzs7OztBQUdKLCtCQVNDOzs7SUFSQyx5QkFBd0I7O0lBQ3hCLDRCQUFpQjs7SUFDakIsK0JBS0U7Ozs7O0FBR0osZ0NBTUM7OztJQUxDLHdDQUFxQjs7SUFDckIsMkNBQXdCOztJQUN4QixzQ0FBbUI7O0lBQ25CLHdDQUFxQjs7SUFDckIsaUNBQWM7Ozs7O0FBR2hCLGlDQWtCQzs7O0lBakJDLDJCQUFjOztJQUNkLDZCQUFrQjs7SUFDbEIsa0NBQWdDOztJQUNoQyxrQ0FBZ0M7O0lBQ2hDLG9DQUFrQzs7SUFDbEMsa0NBQWdDOztJQUNoQywrQkFBK0I7O0lBQy9CLDRCQUF1Qzs7SUFDdkMsNkJBQWdCOztJQUNoQiw4QkFBaUI7O0lBQ2pCLDhCQUFpQjs7SUFHakIsNEJBR0U7Ozs7O0lBTEYsaURBQXdCOzs7OztJQUN4QixvREFBMkI7Ozs7O0FBTzdCLGdDQVdDOzs7SUFWQywwQkFBYzs7SUFDZCwyQkFBb0M7O0lBQ3BDLG1DQUE0Qzs7SUFDNUMsNkJBQWlCOztJQUNqQiw2QkFBaUI7O0lBQ2pCLDJCQUlFIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXhwb3J0IGRlY2xhcmUgY2xhc3MgQXBleENoYXJ0cyB7XG4vLyAgIGNvbnN0cnVjdG9yKGVsOiBhbnksIG9wdGlvbnM6IEFwZXhPcHRpb25zKTtcbi8vICAgc3RhdGljIGV4ZWMoY2hhcnRJRDogc3RyaW5nLCBmbjogKCkgPT4gdm9pZCwgb3B0aW9uczogYW55KTogYW55O1xuLy8gICBzdGF0aWMgaW5pdE9uTG9hZCgpOiB2b2lkO1xuLy8gICByZW5kZXIoKTogUHJvbWlzZTx2b2lkPjtcbi8vICAgdXBkYXRlT3B0aW9ucyhvcHRpb25zOiBhbnksIHJlZHJhd1BhdGhzOiBib29sZWFuLCBhbmltYXRlOiBib29sZWFuLCB1cGRhdGVTeW5jZWRDaGFydHM6IGJvb2xlYW4pOiBQcm9taXNlPHZvaWQ+O1xuLy8gICB1cGRhdGVTZXJpZXMobmV3U2VyaWVzOiBBcGV4QXhpc0NoYXJ0U2VyaWVzIHwgQXBleE5vbkF4aXNDaGFydFNlcmllcywgYW5pbWF0ZTogYm9vbGVhbik6IHZvaWQ7XG4vLyAgIHRvZ2dsZVNlcmllcyhzZXJpZXNOYW1lOiBzdHJpbmcpOiB2b2lkO1xuLy8gICBkZXN0cm95KCk6IHZvaWQ7XG4vLyAgIGFkZFhheGlzQW5ub3RhdGlvbihvcHRpb25zOiBhbnksIHB1c2hUb01lbW9yeT86IGJvb2xlYW4sIGNvbnRleHQ/OiBhbnkpOiB2b2lkO1xuLy8gICBhZGRZYXhpc0Fubm90YXRpb24ob3B0aW9uczogYW55LCBwdXNoVG9NZW1vcnk/OiBib29sZWFuLCBjb250ZXh0PzogYW55KTogdm9pZDtcbi8vICAgYWRkUG9pbnRBbm5vdGF0aW9uKG9wdGlvbnM6IGFueSwgcHVzaFRvTWVtb3J5PzogYm9vbGVhbiwgY29udGV4dD86IGFueSk6IHZvaWQ7XG4vLyAgIGFkZFRleHQob3B0aW9uczogYW55LCBwdXNoVG9NZW1vcnk/OiBib29sZWFuLCBjb250ZXh0PzogYW55KTogdm9pZDtcbi8vICAgZGF0YVVSSSgpOiB2b2lkO1xuLy8gfVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwZXhPcHRpb25zIHtcbiAgYW5ub3RhdGlvbnM/OiBBcGV4QW5ub3RhdGlvbnM7XG4gIGNoYXJ0PzogQXBleENoYXJ0O1xuICBjb2xvcnM/OiBzdHJpbmdbXTtcbiAgZGF0YUxhYmVscz86IEFwZXhEYXRhTGFiZWxzO1xuICBzZXJpZXM/OiBBcGV4QXhpc0NoYXJ0U2VyaWVzIHwgQXBleE5vbkF4aXNDaGFydFNlcmllcztcbiAgc3Ryb2tlPzogQXBleFN0cm9rZTtcbiAgbGFiZWxzPzogc3RyaW5nW107XG4gIGxlZ2VuZD86IEFwZXhMZWdlbmQ7XG4gIGZpbGw/OiBBcGV4RmlsbDtcbiAgdG9vbHRpcD86IEFwZXhUb29sdGlwO1xuICBwbG90T3B0aW9ucz86IEFwZXhQbG90T3B0aW9ucztcbiAgcmVzcG9uc2l2ZT86IEFwZXhSZXNwb25zaXZlW107XG4gIG1hcmtlcnM/OiBBcGV4TWFya2VycztcbiAgbm9EYXRhPzogQXBleE5vRGF0YTtcbiAgeGF4aXM/OiBBcGV4WEF4aXM7XG4gIHlheGlzPzogQXBleFlBeGlzIHwgQXBleFlBeGlzW107XG4gIGdyaWQ/OiBBcGV4R3JpZDtcbiAgc3RhdGVzPzogQXBleFN0YXRlcztcbiAgdGl0bGU/OiBBcGV4VGl0bGVTdWJ0aXRsZTtcbiAgc3VidGl0bGU/OiBBcGV4VGl0bGVTdWJ0aXRsZTtcbiAgdGhlbWU/OiBBcGV4VGhlbWU7XG59XG5cbi8qKlxuICogTWFpbiBDaGFydCBvcHRpb25zXG4gKiBTZWUgaHR0cHM6Ly9hcGV4Y2hhcnRzLmNvbS9kb2NzL29wdGlvbnMvY2hhcnQvXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQXBleENoYXJ0IHtcbiAgd2lkdGg/OiBzdHJpbmcgfCBudW1iZXI7XG4gIGhlaWdodD86IHN0cmluZyB8IG51bWJlcjtcbiAgdHlwZTogQ2hhcnRUeXBlO1xuICBmb3JlQ29sb3I/OiBzdHJpbmc7XG4gIGZvbnRGYW1pbHk/OiBzdHJpbmc7XG4gIGJhY2tncm91bmQ/OiBzdHJpbmc7XG4gIG9mZnNldFg/OiBudW1iZXI7XG4gIG9mZnNldFk/OiBudW1iZXI7XG4gIGRyb3BTaGFkb3c/OiB7XG4gICAgZW5hYmxlZD86IGJvb2xlYW47XG4gICAgdG9wPzogbnVtYmVyO1xuICAgIGxlZnQ/OiBudW1iZXI7XG4gICAgYmx1cj86IG51bWJlcjtcbiAgICBvcGFjaXR5PzogbnVtYmVyO1xuICB9O1xuICBldmVudHM/OiB7XG4gICAgYW5pbWF0aW9uRW5kPyhjaGFydDogYW55LCBvcHRpb25zPzogYW55KTogdm9pZDtcbiAgICBiZWZvcmVNb3VudD8oY2hhcnQ6IGFueSwgb3B0aW9ucz86IGFueSk6IHZvaWQ7XG4gICAgbW91bnRlZD8oY2hhcnQ6IGFueSwgb3B0aW9ucz86IGFueSk6IHZvaWQ7XG4gICAgdXBkYXRlZD8oY2hhcnQ6IGFueSwgb3B0aW9ucz86IGFueSk6IHZvaWQ7XG4gICAgbW91c2VNb3ZlPyhlOiBhbnksIGNoYXJ0PzogYW55LCBvcHRpb25zPzogYW55KTogdm9pZDtcbiAgICBjbGljaz8oZTogYW55LCBjaGFydD86IGFueSwgb3B0aW9ucz86IGFueSk6IHZvaWQ7XG4gICAgbGVnZW5kQ2xpY2s/KGNoYXJ0OiBhbnksIHNlcmllc0luZGV4PzogbnVtYmVyLCBvcHRpb25zPzogYW55KTogdm9pZDtcbiAgICBtYXJrZXJDbGljaz8oZTogYW55LCBjaGFydD86IGFueSwgb3B0aW9ucz86IGFueSk6IHZvaWQ7XG4gICAgc2VsZWN0aW9uPyhjaGFydDogYW55LCBvcHRpb25zPzogYW55KTogdm9pZDtcbiAgICBkYXRhUG9pbnRTZWxlY3Rpb24/KGU6IGFueSwgY2hhcnQ/OiBhbnksIG9wdGlvbnM/OiBhbnkpOiB2b2lkO1xuICAgIGRhdGFQb2ludE1vdXNlRW50ZXI/KGU6IGFueSwgY2hhcnQ/OiBhbnksIG9wdGlvbnM/OiBhbnkpOiB2b2lkO1xuICAgIGRhdGFQb2ludE1vdXNlTGVhdmU/KGU6IGFueSwgY2hhcnQ/OiBhbnksIG9wdGlvbnM/OiBhbnkpOiB2b2lkO1xuICAgIGJlZm9yZVpvb20/KGNoYXJ0OiBhbnksIG9wdGlvbnM/OiBhbnkpOiB2b2lkO1xuICAgIHpvb21lZD8oY2hhcnQ6IGFueSwgb3B0aW9ucz86IGFueSk6IHZvaWQ7XG4gICAgc2Nyb2xsZWQ/KGNoYXJ0OiBhbnksIG9wdGlvbnM/OiBhbnkpOiB2b2lkO1xuICB9O1xuICBicnVzaD86IHtcbiAgICBlbmFibGVkPzogYm9vbGVhbjtcbiAgICBhdXRvU2NhbGVZYXhpcz86IGJvb2xlYW47XG4gICAgdGFyZ2V0Pzogc3RyaW5nO1xuICB9O1xuICBpZD86IHN0cmluZztcbiAgbG9jYWxlcz86IEFwZXhMb2NhbGVbXTtcbiAgZGVmYXVsdExvY2FsZT86IHN0cmluZztcbiAgcGFyZW50SGVpZ2h0T2Zmc2V0PzogbnVtYmVyO1xuICBzcGFya2xpbmU/OiB7XG4gICAgZW5hYmxlZD86IGJvb2xlYW47XG4gIH07XG4gIHN0YWNrZWQ/OiBib29sZWFuO1xuICBzdGFja1R5cGU/OiBcIm5vcm1hbFwiIHwgXCIxMDAlXCI7XG4gIHRvb2xiYXI/OiB7XG4gICAgc2hvdz86IGJvb2xlYW47XG4gICAgdG9vbHM/OiB7XG4gICAgICBkb3dubG9hZD86IGJvb2xlYW47XG4gICAgICBzZWxlY3Rpb24/OiBib29sZWFuO1xuICAgICAgem9vbT86IGJvb2xlYW47XG4gICAgICB6b29taW4/OiBib29sZWFuO1xuICAgICAgem9vbW91dD86IGJvb2xlYW47XG4gICAgICBwYW4/OiBib29sZWFuO1xuICAgICAgcmVzZXQ/OiBib29sZWFuO1xuICAgIH07XG4gICAgYXV0b1NlbGVjdGVkPzogXCJ6b29tXCIgfCBcInNlbGVjdGlvblwiIHwgXCJwYW5cIjtcbiAgfTtcbiAgem9vbT86IHtcbiAgICBlbmFibGVkPzogYm9vbGVhbjtcbiAgICB0eXBlPzogXCJ4XCIgfCBcInlcIiB8IFwieHlcIjtcbiAgICBhdXRvU2NhbGVZYXhpcz86IGJvb2xlYW47XG4gICAgem9vbWVkQXJlYT86IHtcbiAgICAgIGZpbGw/OiB7XG4gICAgICAgIGNvbG9yPzogc3RyaW5nO1xuICAgICAgICBvcGFjaXR5PzogbnVtYmVyO1xuICAgICAgfTtcbiAgICAgIHN0cm9rZT86IHtcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XG4gICAgICAgIG9wYWNpdHk/OiBudW1iZXI7XG4gICAgICAgIHdpZHRoPzogbnVtYmVyO1xuICAgICAgfTtcbiAgICB9O1xuICB9O1xuICBzZWxlY3Rpb24/OiB7XG4gICAgZW5hYmxlZD86IGJvb2xlYW47XG4gICAgdHlwZT86IHN0cmluZztcbiAgICBmaWxsPzoge1xuICAgICAgY29sb3I/OiBzdHJpbmc7XG4gICAgICBvcGFjaXR5PzogbnVtYmVyO1xuICAgIH07XG4gICAgc3Ryb2tlPzoge1xuICAgICAgd2lkdGg/OiBudW1iZXI7XG4gICAgICBjb2xvcj86IHN0cmluZztcbiAgICAgIG9wYWNpdHk/OiBudW1iZXI7XG4gICAgICBkYXNoQXJyYXk/OiBudW1iZXI7XG4gICAgfTtcbiAgICB4YXhpcz86IHtcbiAgICAgIG1pbj86IG51bWJlcjtcbiAgICAgIG1heD86IG51bWJlcjtcbiAgICB9O1xuICAgIHlheGlzPzoge1xuICAgICAgbWluPzogbnVtYmVyO1xuICAgICAgbWF4PzogbnVtYmVyO1xuICAgIH07XG4gIH07XG4gIGFuaW1hdGlvbnM/OiB7XG4gICAgZW5hYmxlZD86IGJvb2xlYW47XG4gICAgZWFzaW5nPzogXCJsaW5lYXJcIiB8IFwiZWFzZWluXCIgfCBcImVhc2VvdXRcIiB8IFwiZWFzZWlub3V0XCI7XG4gICAgc3BlZWQ/OiBudW1iZXI7XG4gICAgYW5pbWF0ZUdyYWR1YWxseT86IHtcbiAgICAgIGVuYWJsZWQ/OiBib29sZWFuO1xuICAgICAgZGVsYXk/OiBudW1iZXI7XG4gICAgfTtcbiAgICBkeW5hbWljQW5pbWF0aW9uPzoge1xuICAgICAgZW5hYmxlZD86IGJvb2xlYW47XG4gICAgICBzcGVlZD86IG51bWJlcjtcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwZXhTdGF0ZXMge1xuICBub3JtYWw/OiB7XG4gICAgZmlsdGVyPzoge1xuICAgICAgdHlwZT86IHN0cmluZztcbiAgICAgIHZhbHVlPzogbnVtYmVyO1xuICAgIH07XG4gIH07XG4gIGhvdmVyPzoge1xuICAgIGZpbHRlcj86IHtcbiAgICAgIHR5cGU/OiBzdHJpbmc7XG4gICAgICB2YWx1ZT86IG51bWJlcjtcbiAgICB9O1xuICB9O1xuICBhY3RpdmU/OiB7XG4gICAgYWxsb3dNdWx0aXBsZURhdGFQb2ludHNTZWxlY3Rpb24/OiBib29sZWFuO1xuICAgIGZpbHRlcj86IHtcbiAgICAgIHR5cGU/OiBzdHJpbmc7XG4gICAgICB2YWx1ZT86IG51bWJlcjtcbiAgICB9O1xuICB9O1xufVxuXG4vKipcbiAqIENoYXJ0IFRpdGxlIG9wdGlvbnNcbiAqIFNlZSBodHRwczovL2FwZXhjaGFydHMuY29tL2RvY3Mvb3B0aW9ucy90aXRsZS9cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBBcGV4VGl0bGVTdWJ0aXRsZSB7XG4gIHRleHQ/OiBzdHJpbmc7XG4gIGFsaWduPzogXCJsZWZ0XCIgfCBcImNlbnRlclwiIHwgXCJyaWdodFwiO1xuICBtYXJnaW4/OiBudW1iZXI7XG4gIG9mZnNldFg/OiBudW1iZXI7XG4gIG9mZnNldFk/OiBudW1iZXI7XG4gIGZsb2F0aW5nPzogbnVtYmVyO1xuICBzdHlsZT86IHtcbiAgICBmb250U2l6ZT86IHN0cmluZztcbiAgICBmb250RmFtaWx5Pzogc3RyaW5nO1xuICAgIGNvbG9yPzogc3RyaW5nO1xuICB9O1xufVxuXG4vKipcbiAqIENoYXJ0IFNlcmllcyBvcHRpb25zLlxuICogVXNlIEFwZXhOb25BeGlzQ2hhcnRTZXJpZXMgZm9yIFBpZSBhbmQgRG9udXQgY2hhcnRzLlxuICogU2VlIGh0dHBzOi8vYXBleGNoYXJ0cy5jb20vZG9jcy9vcHRpb25zL3Nlcmllcy9cbiAqL1xuZXhwb3J0IHR5cGUgQXBleEF4aXNDaGFydFNlcmllcyA9IHtcbiAgbmFtZTogc3RyaW5nO1xuICBkYXRhOiBudW1iZXJbXSB8IHsgeDogc3RyaW5nOyB5OiBudW1iZXIgfVtdO1xufVtdO1xuXG5leHBvcnQgdHlwZSBBcGV4Tm9uQXhpc0NoYXJ0U2VyaWVzID0gbnVtYmVyW107XG5cbi8qKlxuICogT3B0aW9ucyBmb3IgdGhlIGxpbmUgZHJhd24gb24gbGluZSBhbmQgYXJlYSBjaGFydHMuXG4gKiBTZWUgaHR0cHM6Ly9hcGV4Y2hhcnRzLmNvbS9kb2NzL29wdGlvbnMvc3Ryb2tlL1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEFwZXhTdHJva2Uge1xuICBzaG93PzogYm9vbGVhbjtcbiAgY3VydmU/OiBcInNtb290aFwiIHwgXCJzdHJhaWdodFwiIHwgXCJzdGVwbGluZVwiO1xuICBsaW5lQ2FwPzogXCJidXR0XCIgfCBcInNxdWFyZVwiIHwgXCJyb3VuZFwiO1xuICBjb2xvcnM/OiBzdHJpbmdbXTtcbiAgd2lkdGg/OiBudW1iZXI7XG4gIGRhc2hBcnJheT86IG51bWJlciB8IG51bWJlcltdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwZXhBbm5vdGF0aW9ucyB7XG4gIHBvc2l0aW9uPzogc3RyaW5nO1xuICB5YXhpcz86IFlBeGlzQW5ub3RhdGlvbnNbXTtcbiAgeGF4aXM/OiBYQXhpc0Fubm90YXRpb25zW107XG4gIHBvaW50cz86IFBvaW50QW5ub3RhdGlvbnNbXTtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgQW5ub3RhdGlvbkxhYmVsIHtcbiAgYm9yZGVyQ29sb3I/OiBzdHJpbmc7XG4gIGJvcmRlcldpZHRoPzogbnVtYmVyO1xuICB0ZXh0Pzogc3RyaW5nO1xuICB0ZXh0QW5jaG9yPzogc3RyaW5nO1xuICBvZmZzZXRYPzogbnVtYmVyO1xuICBvZmZzZXRZPzogbnVtYmVyO1xuICBzdHlsZT86IEFubm90YXRpb25TdHlsZTtcbiAgcG9zaXRpb24/OiBzdHJpbmc7XG4gIG9yaWVudGF0aW9uPzogc3RyaW5nO1xufVxuZXhwb3J0IGludGVyZmFjZSBBbm5vdGF0aW9uU3R5bGUge1xuICBiYWNrZ3JvdW5kPzogc3RyaW5nO1xuICBjb2xvcj86IHN0cmluZztcbiAgZm9udFNpemU/OiBzdHJpbmc7XG4gIGZvbnRGYW1pbHk/OiBzdHJpbmc7XG4gIGNzc0NsYXNzPzogc3RyaW5nO1xuICBwYWRkaW5nPzoge1xuICAgIGxlZnQ/OiBudW1iZXI7XG4gICAgcmlnaHQ/OiBudW1iZXI7XG4gICAgdG9wPzogbnVtYmVyO1xuICAgIGJvdHRvbT86IG51bWJlcjtcbiAgfTtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgWEF4aXNBbm5vdGF0aW9ucyB7XG4gIHg/OiBudW1iZXIgfCBzdHJpbmc7XG4gIHgyPzogbnVsbCB8IG51bWJlcjtcbiAgc3Ryb2tlRGFzaEFycmF5PzogbnVtYmVyO1xuICBmaWxsQ29sb3I/OiBzdHJpbmc7XG4gIGJvcmRlckNvbG9yPzogc3RyaW5nO1xuICBvcGFjaXR5PzogbnVtYmVyO1xuICBvZmZzZXRYPzogbnVtYmVyO1xuICBvZmZzZXRZPzogbnVtYmVyO1xuICBsYWJlbD86IEFubm90YXRpb25MYWJlbDtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgWUF4aXNBbm5vdGF0aW9ucyB7XG4gIHk/OiBudWxsIHwgbnVtYmVyO1xuICB5Mj86IG51bGwgfCBudW1iZXI7XG4gIHN0cm9rZURhc2hBcnJheT86IG51bWJlcjtcbiAgZmlsbENvbG9yPzogc3RyaW5nO1xuICBib3JkZXJDb2xvcj86IHN0cmluZztcbiAgb3BhY2l0eT86IG51bWJlcjtcbiAgb2Zmc2V0WD86IG51bWJlcjtcbiAgb2Zmc2V0WT86IG51bWJlcjtcbiAgeUF4aXNJbmRleD86IG51bWJlcjtcbiAgbGFiZWw/OiBBbm5vdGF0aW9uTGFiZWw7XG59XG5leHBvcnQgaW50ZXJmYWNlIFBvaW50QW5ub3RhdGlvbnMge1xuICB4PzogbnVtYmVyIHwgc3RyaW5nO1xuICB5PzogbnVsbCB8IG51bWJlcjtcbiAgeUF4aXNJbmRleD86IG51bWJlcjtcbiAgc2VyaWVzSW5kZXg/OiBudW1iZXI7XG4gIG1hcmtlcj86IHtcbiAgICBzaXplPzogbnVtYmVyO1xuICAgIGZpbGxDb2xvcj86IHN0cmluZztcbiAgICBzdHJva2VDb2xvcj86IHN0cmluZztcbiAgICBzdHJva2VXaWR0aD86IG51bWJlcjtcbiAgICBzaGFwZT86IHN0cmluZztcbiAgICBvZmZzZXRYPzogbnVtYmVyO1xuICAgIG9mZnNldFk/OiBudW1iZXI7XG4gICAgcmFkaXVzPzogbnVtYmVyO1xuICAgIGNzc0NsYXNzPzogc3RyaW5nO1xuICB9O1xuICBsYWJlbD86IEFubm90YXRpb25MYWJlbDtcbn1cblxuLyoqXG4gKiBPcHRpb25zIGZvciBsb2NhbGl6YXRpb24uXG4gKiBTZWUgaHR0cHM6Ly9hcGV4Y2hhcnRzLmNvbS9kb2NzL29wdGlvbnMvY2hhcnQvbG9jYWxlc1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEFwZXhMb2NhbGUge1xuICBuYW1lPzogc3RyaW5nO1xuICBvcHRpb25zPzoge1xuICAgIG1vbnRocz86IHN0cmluZ1tdO1xuICAgIHNob3J0TW9udGhzPzogc3RyaW5nW107XG4gICAgZGF5cz86IHN0cmluZ1tdO1xuICAgIHNob3J0RGF5cz86IHN0cmluZ1tdO1xuICAgIHRvb2xiYXI/OiB7XG4gICAgICBkb3dubG9hZD86IHN0cmluZztcbiAgICAgIHNlbGVjdGlvbj86IHN0cmluZztcbiAgICAgIHNlbGVjdGlvblpvb20/OiBzdHJpbmc7XG4gICAgICB6b29tSW4/OiBzdHJpbmc7XG4gICAgICB6b29tT3V0Pzogc3RyaW5nO1xuICAgICAgcGFuPzogc3RyaW5nO1xuICAgICAgcmVzZXQ/OiBzdHJpbmc7XG4gICAgfTtcbiAgfTtcbn1cblxuLyoqXG4gKiBQbG90T3B0aW9ucyBmb3Igc3BlY2lmeWluZyBjaGFydC10eXBlLXNwZWNpZmljIGNvbmZpZ3VyYXRpb24uXG4gKiBTZWUgaHR0cHM6Ly9hcGV4Y2hhcnRzLmNvbS9kb2NzL29wdGlvbnMvcGxvdG9wdGlvbnMvYmFyL1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEFwZXhQbG90T3B0aW9ucyB7XG4gIGJhcj86IHtcbiAgICBob3Jpem9udGFsPzogYm9vbGVhbjtcbiAgICBlbmRpbmdTaGFwZT86IFwiZmxhdFwiIHwgXCJyb3VuZGVkXCI7XG4gICAgY29sdW1uV2lkdGg/OiBzdHJpbmc7XG4gICAgYmFySGVpZ2h0Pzogc3RyaW5nO1xuICAgIGRpc3RyaWJ1dGVkPzogYm9vbGVhbjtcbiAgICBjb2xvcnM/OiB7XG4gICAgICByYW5nZXM/OiB7XG4gICAgICAgIGZyb20/OiBudW1iZXI7XG4gICAgICAgIHRvPzogbnVtYmVyO1xuICAgICAgICBjb2xvcj86IHN0cmluZztcbiAgICAgIH1bXTtcbiAgICAgIGJhY2tncm91bmRCYXJDb2xvcnM/OiBzdHJpbmdbXTtcbiAgICAgIGJhY2tncm91bmRCYXJPcGFjaXR5PzogbnVtYmVyO1xuICAgIH07XG4gICAgZGF0YUxhYmVscz86IHtcbiAgICAgIG1heEl0ZW1zPzogbnVtYmVyO1xuICAgICAgaGlkZU92ZXJmbG93aW5nTGFiZWxzPzogYm9vbGVhbjtcbiAgICAgIHBvc2l0aW9uPzogc3RyaW5nO1xuICAgICAgb3JpZW50YXRpb24/OiBcImhvcml6b250YWxcIiB8IFwidmVydGljYWxcIjtcbiAgICB9O1xuICB9O1xuICBidWJibGU/OiB7XG4gICAgbWluQnViYmxlUmFkaXVzPzogbnVtYmVyO1xuICAgIG1heEJ1YmJsZVJhZGl1cz86IG51bWJlcjtcbiAgfTtcbiAgY2FuZGxlc3RpY2s/OiB7XG4gICAgY29sb3JzPzoge1xuICAgICAgdXB3YXJkPzogc3RyaW5nO1xuICAgICAgZG93bndhcmQ/OiBzdHJpbmc7XG4gICAgfTtcbiAgICB3aWNrPzoge1xuICAgICAgdXNlRmlsbENvbG9yPzogYm9vbGVhbjtcbiAgICB9O1xuICB9O1xuICBoZWF0bWFwPzoge1xuICAgIHJhZGl1cz86IG51bWJlcjtcbiAgICBlbmFibGVTaGFkZXM/OiBib29sZWFuO1xuICAgIHNoYWRlSW50ZW5zaXR5PzogbnVtYmVyO1xuICAgIHJldmVyc2VOZWdhdGl2ZVNoYWRlPzogYm9vbGVhbjtcbiAgICBkaXN0cmlidXRlZD86IGJvb2xlYW47XG4gICAgY29sb3JTY2FsZT86IHtcbiAgICAgIHJhbmdlcz86IHtcbiAgICAgICAgZnJvbT86IG51bWJlcjtcbiAgICAgICAgdG8/OiBudW1iZXI7XG4gICAgICAgIGNvbG9yPzogc3RyaW5nO1xuICAgICAgICBuYW1lPzogc3RyaW5nO1xuICAgICAgfVtdO1xuICAgICAgaW52ZXJzZT86IGJvb2xlYW47XG4gICAgICBtaW4/OiBudW1iZXI7XG4gICAgICBtYXg/OiBudW1iZXI7XG4gICAgfTtcbiAgfTtcbiAgcGllPzoge1xuICAgIHNpemU/OiBudW1iZXI7XG4gICAgY3VzdG9tU2NhbGU/OiBudW1iZXI7XG4gICAgb2Zmc2V0WD86IG51bWJlcjtcbiAgICBvZmZzZXRZPzogbnVtYmVyO1xuICAgIGV4cGFuZE9uQ2xpY2s/OiBib29sZWFuO1xuICAgIGRhdGFMYWJlbHM/OiB7XG4gICAgICBvZmZzZXQ/OiBudW1iZXI7XG4gICAgICBtaW5BbmdsZVRvU2hvd0xhYmVsPzogbnVtYmVyO1xuICAgIH07XG4gICAgZG9udXQ/OiB7XG4gICAgICBzaXplPzogc3RyaW5nO1xuICAgICAgYmFja2dyb3VuZD86IHN0cmluZztcbiAgICAgIGxhYmVscz86IHtcbiAgICAgICAgc2hvdz86IGJvb2xlYW47XG4gICAgICAgIG5hbWU/OiB7XG4gICAgICAgICAgc2hvdz86IGJvb2xlYW47XG4gICAgICAgICAgZm9udFNpemU/OiBzdHJpbmc7XG4gICAgICAgICAgZm9udEZhbWlseT86IHN0cmluZztcbiAgICAgICAgICBjb2xvcj86IHN0cmluZztcbiAgICAgICAgICBvZmZzZXRZPzogbnVtYmVyO1xuICAgICAgICB9O1xuICAgICAgICB2YWx1ZT86IHtcbiAgICAgICAgICBzaG93PzogYm9vbGVhbjtcbiAgICAgICAgICBmb250U2l6ZT86IHN0cmluZztcbiAgICAgICAgICBmb250RmFtaWx5Pzogc3RyaW5nO1xuICAgICAgICAgIGNvbG9yPzogc3RyaW5nO1xuICAgICAgICAgIG9mZnNldFk/OiBudW1iZXI7XG4gICAgICAgICAgZm9ybWF0dGVyPyh2YWw6IHN0cmluZyk6IHN0cmluZztcbiAgICAgICAgfTtcbiAgICAgICAgdG90YWw/OiB7XG4gICAgICAgICAgc2hvdz86IGJvb2xlYW47XG4gICAgICAgICAgc2hvd0Fsd2F5cz86IGJvb2xlYW47XG4gICAgICAgICAgbGFiZWw/OiBzdHJpbmc7XG4gICAgICAgICAgY29sb3I/OiBzdHJpbmc7XG4gICAgICAgICAgZm9ybWF0dGVyPyh3OiBhbnkpOiBzdHJpbmc7XG4gICAgICAgIH07XG4gICAgICB9O1xuICAgIH07XG4gIH07XG4gIHJhZGFyPzoge1xuICAgIHNpemU/OiBudW1iZXI7XG4gICAgb2Zmc2V0WD86IG51bWJlcjtcbiAgICBvZmZzZXRZPzogbnVtYmVyO1xuICAgIHBvbHlnb25zPzoge1xuICAgICAgc3Ryb2tlQ29sb3I/OiBzdHJpbmc7XG4gICAgICBjb25uZWN0b3JDb2xvcnM/OiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgICAgIGZpbGw/OiB7XG4gICAgICAgIGNvbG9ycz86IHN0cmluZ1tdO1xuICAgICAgfTtcbiAgICB9O1xuICB9O1xuICByYWRpYWxCYXI/OiB7XG4gICAgc2l6ZT86IG51bWJlcjtcbiAgICBpbnZlcnNlT3JkZXI/OiBib29sZWFuO1xuICAgIHN0YXJ0QW5nbGU/OiBudW1iZXI7XG4gICAgZW5kQW5nbGU/OiBudW1iZXI7XG4gICAgb2Zmc2V0WD86IG51bWJlcjtcbiAgICBvZmZzZXRZPzogbnVtYmVyO1xuICAgIGhvbGxvdz86IHtcbiAgICAgIG1hcmdpbj86IG51bWJlcjtcbiAgICAgIHNpemU/OiBzdHJpbmc7XG4gICAgICBiYWNrZ3JvdW5kPzogc3RyaW5nO1xuICAgICAgaW1hZ2U/OiBzdHJpbmc7XG4gICAgICB3aWR0aD86IG51bWJlcjtcbiAgICAgIGhlaWdodD86IG51bWJlcjtcbiAgICAgIG9mZnNldFg/OiBudW1iZXI7XG4gICAgICBvZmZzZXRZPzogbnVtYmVyO1xuICAgICAgY2xpcHBlZD86IGJvb2xlYW47XG4gICAgICBwb3NpdGlvbj86IFwiZnJvbnRcIiB8IFwiYmFja1wiO1xuICAgIH07XG4gICAgdHJhY2s/OiB7XG4gICAgICBzaG93PzogYm9vbGVhbjtcbiAgICAgIHN0YXJ0QW5nbGU/OiBudW1iZXI7XG4gICAgICBlbmRBbmdsZT86IG51bWJlcjtcbiAgICAgIGJhY2tncm91bmQ/OiBzdHJpbmc7XG4gICAgICBzdHJva2VXaWR0aD86IHN0cmluZztcbiAgICAgIG9wYWNpdHk/OiBudW1iZXI7XG4gICAgICBtYXJnaW4/OiBudW1iZXI7XG4gICAgICBkcm9wU2hhZG93Pzoge1xuICAgICAgICBlbmFibGVkPzogYm9vbGVhbjtcbiAgICAgICAgdG9wPzogbnVtYmVyO1xuICAgICAgICBsZWZ0PzogbnVtYmVyO1xuICAgICAgICBibHVyPzogbnVtYmVyO1xuICAgICAgICBvcGFjaXR5PzogbnVtYmVyO1xuICAgICAgfTtcbiAgICB9O1xuICAgIGRhdGFMYWJlbHM/OiB7XG4gICAgICBzaG93PzogYm9vbGVhbjtcbiAgICAgIG5hbWU/OiB7XG4gICAgICAgIHNob3c/OiBib29sZWFuO1xuICAgICAgICBmb250U2l6ZT86IHN0cmluZztcbiAgICAgICAgZm9udEZhbWlseT86IHN0cmluZztcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XG4gICAgICAgIG9mZnNldFk/OiBudW1iZXI7XG4gICAgICB9O1xuICAgICAgdmFsdWU/OiB7XG4gICAgICAgIHNob3c/OiBib29sZWFuO1xuICAgICAgICBmb250U2l6ZT86IHN0cmluZztcbiAgICAgICAgZm9udEZhbWlseT86IHN0cmluZztcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XG4gICAgICAgIG9mZnNldFk/OiBudW1iZXI7XG4gICAgICAgIGZvcm1hdHRlcj8odmFsOiBudW1iZXIpOiBzdHJpbmc7XG4gICAgICB9O1xuICAgICAgdG90YWw/OiB7XG4gICAgICAgIHNob3c/OiBib29sZWFuO1xuICAgICAgICBsYWJlbD86IHN0cmluZztcbiAgICAgICAgY29sb3I/OiBzdHJpbmc7XG4gICAgICAgIGZvcm1hdHRlcj8ob3B0czogYW55KTogc3RyaW5nO1xuICAgICAgfTtcbiAgICB9O1xuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwZXhGaWxsIHtcbiAgY29sb3JzPzogc3RyaW5nW107XG4gIG9wYWNpdHk/OiBudW1iZXI7XG4gIHR5cGU/OiBzdHJpbmc7XG4gIGdyYWRpZW50Pzoge1xuICAgIHNoYWRlPzogc3RyaW5nO1xuICAgIHR5cGU/OiBzdHJpbmc7XG4gICAgc2hhZGVJbnRlbnNpdHk/OiBudW1iZXI7XG4gICAgZ3JhZGllbnRUb0NvbG9ycz86IHN0cmluZ1tdO1xuICAgIGludmVyc2VDb2xvcnM/OiBib29sZWFuO1xuICAgIG9wYWNpdHlGcm9tPzogbnVtYmVyO1xuICAgIG9wYWNpdHlUbz86IG51bWJlcjtcbiAgICBzdG9wcz86IG51bWJlcltdO1xuICB9O1xuICBpbWFnZT86IHtcbiAgICBzcmM/OiBzdHJpbmdbXTtcbiAgICB3aWR0aD86IG51bWJlcjtcbiAgICBoZWlnaHQ/OiBudW1iZXI7XG4gIH07XG4gIHBhdHRlcm4/OiB7XG4gICAgc3R5bGU/OiBzdHJpbmc7XG4gICAgd2lkdGg/OiBudW1iZXI7XG4gICAgaGVpZ2h0PzogbnVtYmVyO1xuICAgIHN0cm9rZVdpZHRoPzogbnVtYmVyO1xuICB9O1xufVxuXG4vKipcbiAqIENoYXJ0IExlZ2VuZCBjb25maWd1cmF0aW9uIG9wdGlvbnMuXG4gKiBTZWUgaHR0cHM6Ly9hcGV4Y2hhcnRzLmNvbS9kb2NzL29wdGlvbnMvbGVnZW5kL1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEFwZXhMZWdlbmQge1xuICBzaG93PzogYm9vbGVhbjtcbiAgc2hvd0ZvclNpbmdsZVNlcmllcz86IGJvb2xlYW47XG4gIHNob3dGb3JOdWxsU2VyaWVzPzogYm9vbGVhbjtcbiAgc2hvd0Zvclplcm9TZXJpZXM/OiBib29sZWFuO1xuICBmbG9hdGluZz86IGJvb2xlYW47XG4gIGludmVyc2VPcmRlcj86IGJvb2xlYW47XG4gIHBvc2l0aW9uPzogXCJ0b3BcIiB8IFwicmlnaHRcIiB8IFwiYm90dG9tXCIgfCBcImxlZnRcIjtcbiAgaG9yaXpvbnRhbEFsaWduPzogXCJsZWZ0XCIgfCBcImNlbnRlclwiIHwgXCJyaWdodFwiO1xuICBmb250U2l6ZT86IHN0cmluZztcbiAgZm9udEZhbWlseT86IHN0cmluZztcbiAgd2lkdGg/OiBudW1iZXI7XG4gIGhlaWdodD86IG51bWJlcjtcbiAgb2Zmc2V0WD86IG51bWJlcjtcbiAgb2Zmc2V0WT86IG51bWJlcjtcbiAgZm9ybWF0dGVyPyhsZWdlbmROYW1lOiBzdHJpbmcsIG9wdHM/OiBhbnkpOiBzdHJpbmc7XG4gIHRvb2x0aXBIb3ZlckZvcm1hdHRlcj8obGVnZW5kTmFtZTogc3RyaW5nLCBvcHRzPzogYW55KTogc3RyaW5nO1xuICB0ZXh0QW5jaG9yPzogc3RyaW5nO1xuICBsYWJlbHM/OiB7XG4gICAgY29sb3I/OiBzdHJpbmc7XG4gICAgdXNlU2VyaWVzQ29sb3JzPzogYm9vbGVhbjtcbiAgfTtcbiAgbWFya2Vycz86IHtcbiAgICB3aWR0aD86IG51bWJlcjtcbiAgICBoZWlnaHQ/OiBudW1iZXI7XG4gICAgc3Ryb2tlQ29sb3I/OiBzdHJpbmc7XG4gICAgc3Ryb2tlV2lkdGg/OiBudW1iZXI7XG4gICAgZmlsbENvbG9ycz86IHN0cmluZ1tdO1xuICAgIG9mZnNldFg/OiBudW1iZXI7XG4gICAgb2Zmc2V0WT86IG51bWJlcjtcbiAgICByYWRpdXM/OiBudW1iZXI7XG4gICAgY3VzdG9tSFRNTD8oKTogc3RyaW5nO1xuICAgIG9uQ2xpY2s/KCk6IHZvaWQ7XG4gIH07XG4gIGl0ZW1NYXJnaW4/OiB7XG4gICAgaG9yaXpvbnRhbD86IG51bWJlcjtcbiAgICB2ZXJ0aWNhbD86IG51bWJlcjtcbiAgfTtcbiAgY29udGFpbmVyTWFyZ2luPzoge1xuICAgIGxlZnQ/OiBudW1iZXI7XG4gICAgdG9wPzogbnVtYmVyO1xuICB9O1xuICBvbkl0ZW1DbGljaz86IHtcbiAgICB0b2dnbGVEYXRhU2VyaWVzPzogYm9vbGVhbjtcbiAgfTtcbiAgb25JdGVtSG92ZXI/OiB7XG4gICAgaGlnaGxpZ2h0RGF0YVNlcmllcz86IGJvb2xlYW47XG4gIH07XG59XG5cbi8qKlxuICogQ2hhcnQgRGF0YWxhYmVscyBvcHRpb25zXG4gKiBTZWUgaHR0cHM6Ly9hcGV4Y2hhcnRzLmNvbS9kb2NzL29wdGlvbnMvZGF0YWxhYmVscy9cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBBcGV4RGF0YUxhYmVscyB7XG4gIGVuYWJsZWQ/OiBib29sZWFuO1xuICBlbmFibGVkT25TZXJpZXM/OiB1bmRlZmluZWQgfCBib29sZWFuO1xuICB0ZXh0QW5jaG9yPzogXCJzdGFydFwiIHwgXCJtaWRkbGVcIiB8IFwiZW5kXCI7XG4gIG9mZnNldFg/OiBudW1iZXI7XG4gIG9mZnNldFk/OiBudW1iZXI7XG4gIHN0eWxlPzoge1xuICAgIGZvbnRTaXplPzogc3RyaW5nO1xuICAgIGZvbnRGYW1pbHk/OiBzdHJpbmc7XG4gICAgY29sb3JzPzogc3RyaW5nW107XG4gIH07XG4gIGRyb3BTaGFkb3c/OiB7XG4gICAgZW5hYmxlZDogYm9vbGVhbjtcbiAgICB0b3A/OiBudW1iZXI7XG4gICAgbGVmdD86IG51bWJlcjtcbiAgICBibHVyPzogbnVtYmVyO1xuICAgIG9wYWNpdHk/OiBudW1iZXI7XG4gIH07XG4gIGZvcm1hdHRlcj8odmFsOiBudW1iZXIsIG9wdHM/OiBhbnkpOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBleFJlc3BvbnNpdmUge1xuICBicmVha3BvaW50PzogbnVtYmVyO1xuICBvcHRpb25zPzogYW55O1xufVxuXG4vKipcbiAqIENoYXJ0IFRvb2x0aXAgb3B0aW9uc1xuICogU2VlIGh0dHBzOi8vYXBleGNoYXJ0cy5jb20vZG9jcy9vcHRpb25zL3Rvb2x0aXAvXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQXBleFRvb2x0aXAge1xuICBlbmFibGVkPzogYm9vbGVhbjtcbiAgZW5hYmxlZE9uU2VyaWVzPzogdW5kZWZpbmVkIHwgYm9vbGVhbjtcbiAgc2hhcmVkPzogYm9vbGVhbjtcbiAgZm9sbG93Q3Vyc29yPzogYm9vbGVhbjtcbiAgaW50ZXJzZWN0PzogYm9vbGVhbjtcbiAgaW52ZXJzZU9yZGVyPzogYm9vbGVhbjtcbiAgY3VzdG9tPzogKChvcHRpb25zOiBhbnkpID0+IGFueSkgfCAoKG9wdGlvbnM6IGFueSkgPT4gYW55KVtdO1xuICBmaWxsU2VyaWVzQ29sb3I/OiBib29sZWFuO1xuICB0aGVtZT86IHN0cmluZztcbiAgc3R5bGU/OiB7XG4gICAgZm9udFNpemU/OiBzdHJpbmc7XG4gICAgZm9udEZhbWlseT86IHN0cmluZztcbiAgfTtcbiAgb25EYXRhc2V0SG92ZXI/OiB7XG4gICAgaGlnaGxpZ2h0REF0YVNlcmllcz86IGJvb2xlYW47XG4gIH07XG4gIHg/OiB7XG4gICAgc2hvdz86IGJvb2xlYW47XG4gICAgZm9ybWF0Pzogc3RyaW5nO1xuICAgIGZvcm1hdHRlcj8odmFsOiBudW1iZXIpOiBzdHJpbmc7XG4gIH07XG4gIHk/OiB7XG4gICAgdGl0bGU/OiB7XG4gICAgICBmb3JtYXR0ZXI/KHNlcmllc05hbWU6IHN0cmluZyk6IHN0cmluZztcbiAgICB9O1xuICAgIGZvcm1hdHRlcj8odmFsOiBudW1iZXIsIG9wdHM/OiBhbnkpOiBzdHJpbmc7XG4gIH07XG4gIHo/OiB7XG4gICAgdGl0bGU/OiBzdHJpbmc7XG4gICAgZm9ybWF0dGVyPyh2YWw6IG51bWJlcik6IHN0cmluZztcbiAgfTtcbiAgbWFya2VyPzoge1xuICAgIHNob3c/OiBib29sZWFuO1xuICAgIGZpbGxDb2xvcnM/OiBzdHJpbmdbXTtcbiAgfTtcbiAgaXRlbXM/OiB7XG4gICAgZGlzcGxheT86IHN0cmluZztcbiAgfTtcbiAgZml4ZWQ/OiB7XG4gICAgZW5hYmxlZD86IGJvb2xlYW47XG4gICAgcG9zaXRpb24/OiBzdHJpbmc7IC8vIHRvcFJpZ2h0OyB0b3BMZWZ0OyBib3R0b21SaWdodDsgYm90dG9tTGVmdFxuICAgIG9mZnNldFg/OiBudW1iZXI7XG4gICAgb2Zmc2V0WT86IG51bWJlcjtcbiAgfTtcbn1cblxuLyoqXG4gKiBYIEF4aXMgb3B0aW9uc1xuICogU2VlIGh0dHBzOi8vYXBleGNoYXJ0cy5jb20vZG9jcy9vcHRpb25zL3hheGlzL1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEFwZXhYQXhpcyB7XG4gIHR5cGU/OiBcImNhdGVnb3J5XCIgfCBcImRhdGV0aW1lXCIgfCBcIm51bWVyaWNcIjtcbiAgY2F0ZWdvcmllcz86IHN0cmluZ1tdIHwgbnVtYmVyW107XG4gIGxhYmVscz86IHtcbiAgICBzaG93PzogYm9vbGVhbjtcbiAgICByb3RhdGU/OiBudW1iZXI7XG4gICAgcm90YXRlQWx3YXlzPzogYm9vbGVhbjtcbiAgICBoaWRlT3ZlcmxhcHBpbmdMYWJlbHM/OiBib29sZWFuO1xuICAgIHNob3dEdXBsaWNhdGVzPzogYm9vbGVhbjtcbiAgICB0cmltPzogYm9vbGVhbjtcbiAgICBtaW5IZWlnaHQ/OiBudW1iZXI7XG4gICAgbWF4SGVpZ2h0PzogbnVtYmVyO1xuICAgIHN0eWxlPzoge1xuICAgICAgY29sb3JzPzogc3RyaW5nW107XG4gICAgICBmb250U2l6ZT86IHN0cmluZztcbiAgICAgIGZvbnRGYW1pbHk/OiBzdHJpbmc7XG4gICAgICBjc3NDbGFzcz86IHN0cmluZztcbiAgICB9O1xuICAgIG9mZnNldFg/OiBudW1iZXI7XG4gICAgb2Zmc2V0WT86IG51bWJlcjtcbiAgICBmb3JtYXQ/OiBzdHJpbmc7XG4gICAgZGF0ZXRpbWVGb3JtYXR0ZXI/OiB7XG4gICAgICB5ZWFyPzogc3RyaW5nO1xuICAgICAgbW9udGg/OiBzdHJpbmc7XG4gICAgICBkYXk/OiBzdHJpbmc7XG4gICAgICBob3VyPzogc3RyaW5nO1xuICAgICAgbWludXRlPzogc3RyaW5nO1xuICAgIH07XG4gICAgZm9ybWF0dGVyPyh2YWx1ZTogc3RyaW5nLCB0aW1lc3RhbXA/OiBudW1iZXIpOiBzdHJpbmc7XG4gIH07XG4gIGF4aXNCb3JkZXI/OiB7XG4gICAgc2hvdz86IGJvb2xlYW47XG4gICAgY29sb3I/OiBzdHJpbmc7XG4gICAgb2Zmc2V0WD86IG51bWJlcjtcbiAgICBvZmZzZXRZPzogbnVtYmVyO1xuICAgIHN0cm9rZVdpZHRoPzogbnVtYmVyO1xuICB9O1xuICBheGlzVGlja3M/OiB7XG4gICAgc2hvdz86IGJvb2xlYW47XG4gICAgYm9yZGVyVHlwZT86IHN0cmluZztcbiAgICBjb2xvcj86IHN0cmluZztcbiAgICBoZWlnaHQ/OiBudW1iZXI7XG4gICAgb2Zmc2V0WD86IG51bWJlcjtcbiAgICBvZmZzZXRZPzogbnVtYmVyO1xuICB9O1xuICB0aWNrQW1vdW50PzogbnVtYmVyIHwgXCJkYXRhUG9pbnRzXCI7XG4gIG1pbj86IG51bWJlcjtcbiAgbWF4PzogbnVtYmVyO1xuICByYW5nZT86IG51bWJlcjtcbiAgZmxvYXRpbmc/OiBib29sZWFuO1xuICBwb3NpdGlvbj86IHN0cmluZztcbiAgdGl0bGU/OiB7XG4gICAgdGV4dD86IHN0cmluZztcbiAgICBvZmZzZXRYPzogbnVtYmVyO1xuICAgIG9mZnNldFk/OiBudW1iZXI7XG4gICAgc3R5bGU/OiB7XG4gICAgICBjb2xvcj86IHN0cmluZztcbiAgICAgIGZvbnRGYW1pbHk/OiBzdHJpbmc7XG4gICAgICBmb250U2l6ZT86IHN0cmluZztcbiAgICAgIGNzc0NsYXNzPzogc3RyaW5nO1xuICAgIH07XG4gIH07XG4gIGNyb3NzaGFpcnM/OiB7XG4gICAgc2hvdz86IGJvb2xlYW47XG4gICAgd2lkdGg/OiBudW1iZXIgfCBzdHJpbmc7XG4gICAgcG9zaXRpb24/OiBzdHJpbmc7XG4gICAgb3BhY2l0eT86IG51bWJlcjtcbiAgICBzdHJva2U/OiB7XG4gICAgICBjb2xvcj86IHN0cmluZztcbiAgICAgIHdpZHRoPzogbnVtYmVyO1xuICAgICAgZGFzaEFycmF5PzogbnVtYmVyO1xuICAgIH07XG4gICAgZmlsbD86IHtcbiAgICAgIHR5cGU/OiBzdHJpbmc7XG4gICAgICBjb2xvcj86IHN0cmluZztcbiAgICAgIGdyYWRpZW50Pzoge1xuICAgICAgICBjb2xvckZyb20/OiBzdHJpbmc7XG4gICAgICAgIGNvbG9yVG8/OiBzdHJpbmc7XG4gICAgICAgIHN0b3BzPzogbnVtYmVyW107XG4gICAgICAgIG9wYWNpdHlGcm9tPzogbnVtYmVyO1xuICAgICAgICBvcGFjaXR5VG8/OiBudW1iZXI7XG4gICAgICB9O1xuICAgIH07XG4gICAgZHJvcFNoYWRvdz86IHtcbiAgICAgIGVuYWJsZWQ/OiBib29sZWFuO1xuICAgICAgdG9wPzogbnVtYmVyO1xuICAgICAgbGVmdD86IG51bWJlcjtcbiAgICAgIGJsdXI/OiBudW1iZXI7XG4gICAgICBvcGFjaXR5PzogbnVtYmVyO1xuICAgIH07XG4gIH07XG4gIHRvb2x0aXA/OiB7XG4gICAgZW5hYmxlZD86IGJvb2xlYW47XG4gICAgb2Zmc2V0WT86IG51bWJlcjtcbiAgICBmb3JtYXR0ZXI/KHZhbHVlOiBzdHJpbmcsIG9wdHM/OiBvYmplY3QpOiBzdHJpbmc7XG4gICAgc3R5bGU/OiB7XG4gICAgICBmb250U2l6ZT86IHN0cmluZztcbiAgICAgIGZvbnRGYW1pbHk/OiBzdHJpbmc7XG4gICAgfTtcbiAgfTtcbn1cblxuLyoqXG4gKiBZIEF4aXMgb3B0aW9uc1xuICogU2VlIGh0dHBzOi8vYXBleGNoYXJ0cy5jb20vZG9jcy9vcHRpb25zL3lheGlzL1xuICovXG5leHBvcnQgaW50ZXJmYWNlIEFwZXhZQXhpcyB7XG4gIHNob3c/OiBib29sZWFuO1xuICBzaG93QWx3YXlzPzogYm9vbGVhbjtcbiAgc2VyaWVzTmFtZT86IHN0cmluZztcbiAgb3Bwb3NpdGU/OiBib29sZWFuO1xuICBsb2dhcml0aG1pYz86IGJvb2xlYW47XG4gIHRpY2tBbW91bnQ/OiBudW1iZXI7XG4gIGZvcmNlTmljZVNjYWxlPzogYm9vbGVhbjtcbiAgbWluPzogbnVtYmVyIHwgKChtaW46IG51bWJlcikgPT4gbnVtYmVyKTtcbiAgbWF4PzogbnVtYmVyIHwgKChtYXg6IG51bWJlcikgPT4gbnVtYmVyKTtcbiAgZmxvYXRpbmc/OiBib29sZWFuO1xuICBkZWNpbWFsc0luRmxvYXQ/OiBudW1iZXI7XG4gIGxhYmVscz86IHtcbiAgICBzaG93PzogYm9vbGVhbjtcbiAgICBtaW5XaWR0aD86IG51bWJlcjtcbiAgICBtYXhXaWR0aD86IG51bWJlcjtcbiAgICBvZmZzZXRYPzogbnVtYmVyO1xuICAgIG9mZnNldFk/OiBudW1iZXI7XG4gICAgcm90YXRlPzogbnVtYmVyO1xuICAgIGFsaWduPzogXCJsZWZ0XCIgfCBcImNlbnRlclwiIHwgXCJyaWdodFwiO1xuICAgIHBhZGRpbmc/OiBudW1iZXI7XG4gICAgc3R5bGU/OiB7XG4gICAgICBjb2xvcj86IHN0cmluZztcbiAgICAgIGZvbnRTaXplPzogc3RyaW5nO1xuICAgICAgZm9udEZhbWlseT86IHN0cmluZztcbiAgICAgIGNzc0NsYXNzPzogc3RyaW5nO1xuICAgIH07XG4gICAgZm9ybWF0dGVyPyh2YWw6IG51bWJlciwgb3B0cz86IGFueSk6IHN0cmluZztcbiAgfTtcbiAgYXhpc0JvcmRlcj86IHtcbiAgICBzaG93PzogYm9vbGVhbjtcbiAgICBjb2xvcj86IHN0cmluZztcbiAgICBvZmZzZXRYPzogbnVtYmVyO1xuICAgIG9mZnNldFk/OiBudW1iZXI7XG4gIH07XG4gIGF4aXNUaWNrcz86IHtcbiAgICBzaG93PzogYm9vbGVhbjtcbiAgICBjb2xvcj86IHN0cmluZztcbiAgICB3aWR0aD86IG51bWJlcjtcbiAgICBvZmZzZXRYPzogbnVtYmVyO1xuICAgIG9mZnNldFk/OiBudW1iZXI7XG4gIH07XG4gIHRpdGxlPzoge1xuICAgIHRleHQ/OiBzdHJpbmc7XG4gICAgcm90YXRlPzogbnVtYmVyO1xuICAgIG9mZnNldFg/OiBudW1iZXI7XG4gICAgb2Zmc2V0WT86IG51bWJlcjtcbiAgICBzdHlsZT86IHtcbiAgICAgIGNvbG9yPzogc3RyaW5nO1xuICAgICAgZm9udFNpemU/OiBzdHJpbmc7XG4gICAgICBmb250RmFtaWx5Pzogc3RyaW5nO1xuICAgICAgY3NzQ2xhc3M/OiBzdHJpbmc7XG4gICAgfTtcbiAgfTtcbiAgY3Jvc3NoYWlycz86IHtcbiAgICBzaG93PzogYm9vbGVhbjtcbiAgICBwb3NpdGlvbj86IHN0cmluZztcbiAgICBzdHJva2U/OiB7XG4gICAgICBjb2xvcj86IHN0cmluZztcbiAgICAgIHdpZHRoPzogbnVtYmVyO1xuICAgICAgZGFzaEFycmF5PzogbnVtYmVyO1xuICAgIH07XG4gIH07XG4gIHRvb2x0aXA/OiB7XG4gICAgZW5hYmxlZD86IGJvb2xlYW47XG4gICAgb2Zmc2V0WD86IG51bWJlcjtcbiAgfTtcbn1cblxuLyoqXG4gKiBQbG90IFggYW5kIFkgZ3JpZCBvcHRpb25zXG4gKiBTZWUgaHR0cHM6Ly9hcGV4Y2hhcnRzLmNvbS9kb2NzL29wdGlvbnMvZ3JpZC9cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBBcGV4R3JpZCB7XG4gIHNob3c/OiBib29sZWFuO1xuICBib3JkZXJDb2xvcj86IHN0cmluZztcbiAgc3Ryb2tlRGFzaEFycmF5PzogbnVtYmVyO1xuICBwb3NpdGlvbj86IFwiZnJvbnRcIiB8IFwiYmFja1wiO1xuICB4YXhpcz86IHtcbiAgICBsaW5lcz86IHtcbiAgICAgIHNob3c/OiBib29sZWFuO1xuICAgICAgb2Zmc2V0WD86IG51bWJlcjtcbiAgICAgIG9mZnNldFk/OiBudW1iZXI7XG4gICAgfTtcbiAgfTtcbiAgeWF4aXM/OiB7XG4gICAgbGluZXM/OiB7XG4gICAgICBzaG93PzogYm9vbGVhbjtcbiAgICAgIG9mZnNldFg/OiBudW1iZXI7XG4gICAgICBvZmZzZXRZPzogbnVtYmVyO1xuICAgIH07XG4gIH07XG4gIHJvdz86IHtcbiAgICBjb2xvcnM/OiBzdHJpbmdbXTtcbiAgICBvcGFjaXR5PzogbnVtYmVyO1xuICB9O1xuICBjb2x1bW4/OiB7XG4gICAgY29sb3JzPzogc3RyaW5nW107XG4gICAgb3BhY2l0eT86IG51bWJlcjtcbiAgfTtcbiAgcGFkZGluZz86IHtcbiAgICB0b3A/OiBudW1iZXI7XG4gICAgcmlnaHQ/OiBudW1iZXI7XG4gICAgYm90dG9tPzogbnVtYmVyO1xuICAgIGxlZnQ/OiBudW1iZXI7XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBleFRoZW1lIHtcbiAgbW9kZT86IFwibGlnaHRcIiB8IFwiZGFya1wiO1xuICBwYWxldHRlPzogc3RyaW5nO1xuICBtb25vY2hyb21lPzoge1xuICAgIGVuYWJsZWQ/OiBib29sZWFuO1xuICAgIGNvbG9yPzogc3RyaW5nO1xuICAgIHNoYWRlVG8/OiBcImxpZ2h0XCIgfCBcImRhcmtcIjtcbiAgICBzaGFkZUludGVuc2l0eT86IG51bWJlcjtcbiAgfTtcbn1cblxuaW50ZXJmYWNlIEFwZXhEaXNjcmV0ZVBvaW50IHtcbiAgc2VyaWVzSW5kZXg/OiBudW1iZXI7XG4gIGRhdGFQb2ludEluZGV4PzogbnVtYmVyO1xuICBmaWxsQ29sb3I/OiBzdHJpbmc7XG4gIHN0cm9rZUNvbG9yPzogc3RyaW5nO1xuICBzaXplPzogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFwZXhNYXJrZXJzIHtcbiAgc2l6ZT86IG51bWJlcjtcbiAgY29sb3JzPzogc3RyaW5nW107XG4gIHN0cm9rZUNvbG9yPzogc3RyaW5nIHwgc3RyaW5nW107XG4gIHN0cm9rZVdpZHRoPzogbnVtYmVyIHwgbnVtYmVyW107XG4gIHN0cm9rZU9wYWNpdHk/OiBudW1iZXIgfCBudW1iZXJbXTtcbiAgZmlsbE9wYWNpdHk/OiBudW1iZXIgfCBudW1iZXJbXTtcbiAgZGlzY3JldGU/OiBBcGV4RGlzY3JldGVQb2ludFtdO1xuICBzaGFwZT86IFwiY2lyY2xlXCIgfCBcInNxdWFyZVwiIHwgc3RyaW5nW107XG4gIHJhZGl1cz86IG51bWJlcjtcbiAgb2Zmc2V0WD86IG51bWJlcjtcbiAgb2Zmc2V0WT86IG51bWJlcjtcbiAgb25DbGljaz8oZT86IGFueSk6IHZvaWQ7XG4gIG9uRGJsQ2xpY2s/KGU/OiBhbnkpOiB2b2lkO1xuICBob3Zlcj86IHtcbiAgICBzaXplPzogbnVtYmVyO1xuICAgIHNpemVPZmZzZXQ/OiBudW1iZXI7XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBleE5vRGF0YSB7XG4gIHRleHQ/OiBzdHJpbmc7XG4gIGFsaWduPzogXCJsZWZ0XCIgfCBcInJpZ2h0XCIgfCBcImNlbnRlclwiO1xuICB2ZXJ0aWNhbEFsaWduPzogXCJ0b3BcIiB8IFwibWlkZGxlXCIgfCBcImJvdHRvbVwiO1xuICBvZmZzZXRYPzogbnVtYmVyO1xuICBvZmZzZXRZPzogbnVtYmVyO1xuICBzdHlsZT86IHtcbiAgICBjb2xvcj86IHN0cmluZztcbiAgICBmb250U2l6ZT86IHN0cmluZztcbiAgICBmb250RmFtaWx5Pzogc3RyaW5nO1xuICB9O1xufVxuXG5leHBvcnQgdHlwZSBDaGFydFR5cGUgPVxuICB8IFwibGluZVwiXG4gIHwgXCJhcmVhXCJcbiAgfCBcImJhclwiXG4gIHwgXCJoaXN0b2dyYW1cIlxuICB8IFwicGllXCJcbiAgfCBcImRvbnV0XCJcbiAgfCBcInJhZGlhbEJhclwiXG4gIHwgXCJzY2F0dGVyXCJcbiAgfCBcImJ1YmJsZVwiXG4gIHwgXCJoZWF0bWFwXCJcbiAgfCBcImNhbmRsZXN0aWNrXCJcbiAgfCBcInJhZGFyXCJcbiAgfCBcInJhbmdlQmFyXCI7XG4iXX0=